name: ci-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        ports:
          - 5400:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.24
        id: go
        
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
        
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.3/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          which migrate
        
      - name: Run migrations
        run: make migrateup
        
      - name: Create test users
        run: |
          # Connect to PostgreSQL and create test users
          PGPASSWORD=secret psql -h localhost -U root -d simple_bank -p 5400 -c "
          CREATE TABLE IF NOT EXISTS users (
            username VARCHAR PRIMARY KEY,
            hashed_password VARCHAR NOT NULL,
            full_name VARCHAR NOT NULL,
            email VARCHAR UNIQUE NOT NULL,
            password_changed_at TIMESTAMPTZ NOT NULL DEFAULT('0001-01-01 00:00:00Z'),
            created_at TIMESTAMPTZ NOT NULL DEFAULT (now())
          );
          
          -- Insert test users that match the random owners created in tests
          INSERT INTO users (username, hashed_password, full_name, email)
          SELECT 
            'user_' || i, 
            'password', 
            'User ' || i, 
            'user_' || i || '@example.com'
          FROM generate_series(1, 100) AS i
          ON CONFLICT DO NOTHING;
          "
        
      - name: Get dependencies
        run: go get -v -t -d ./...
          
      - name: Install sqlc
        run: |
          curl -L https://github.com/kyleconroy/sqlc/releases/download/v1.15.0/sqlc_1.15.0_linux_amd64.tar.gz | tar xvz
          sudo mv sqlc /usr/bin/sqlc
          which sqlc
          
      - name: Generate code with sqlc
        run: make sqlc
        
      - name: Test
        run: go test -v ./db/sqlc
